@model WebApplication2.Models.Preke
@{
	ViewData["title"] = "Prekės redagavimas";
}

<div class="main-content-header container-fluid d-flex d-row justify-content-between align-items-center">
	<span class="title">@ViewData["title"]</span>
	<span class="actions">
		<a href="@Url.Action("Index")" class="link-primary"><i class="fa-solid fa-angles-left"></i> Atgal į sarašą</a>
	</span>
</div>

<div class="container-fluid d-flex justify-content-center">
@using(Html.BeginForm())
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	@Html.HiddenFor(m => m.Code)

	<fieldset class="border rounded shadow p-2">
		<legend class="text-center">Prekė</legend>

		<div class="form-group">
			@Html.LabelFor(m => m.Title, new { @class = "control-label" })
			@Html.EditorFor(m => m.Title, new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Price, new { @class = "control-label" })
			@Html.EditorFor(m => m.Price, new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Count, new { @class = "control-label" })
			@Html.EditorFor(m => m.Count, new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Count, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Manufacturer, new { @class = "control-label" })
			@Html.EditorFor(m => m.Manufacturer, new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Manufacturer, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Distributor, new { @class = "control-label" })
			@Html.EditorFor(m => m.Distributor, new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Distributor, "", new { @class = "text-danger" })
		</div>

		<div class="form-group">
			@Html.LabelFor(m => m.Type, new { @class = "control-label" })
			@Html.DropDownListFor(m => m.Type, Model.Lists.Types, "---", new { @class = "form-control"})
			@Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
		</div>

	</fieldset>

	<fieldset class="border rounded shadow p-2">

		<div class="container-fluid d-flex d-row justify-content-between align-items-center">
			<span></span>
			<legend style="width: unset; margin-bottom: 0px;">Specifikacijos</legend>
			<button
				name="add"
				value="1"
				formnovalidate @*ASP.NET Core magic attribute to prevent client side validation when submit button is clicked*@
				formaction="@Url.Action()#listEnd"
				class="btn btn-info"
				style="white-space: nowrap;"><i class="fa-solid fa-plus"></i> Pridėti </button>
		</div>

		<table class="table table-striped table-hover w-100">
			<thead>
				<tr>
					<th>Specifikacija</th>
					<th>Reikšmė</th>
					<th style="width: 1px;"></th>
				</tr>
			</thead>
			<tbody>
				@for( var i = 0; i < Model.Specifikacijos.Count; i++ ) {
				<tr>
					@* add hidden form fields for non-visible properties, otherwise they will get lost in code that handles button presses *@
					@Html.HiddenFor(m => m.Specifikacijos[i].Id)
					@Html.ValueFor(m => m.Specifikacijos[i].ItemId, Model.Code.ToString())
					<td>
						@Html.LabelFor(m => m.Specifikacijos[i].Feature, new { @class = "control-label" })
						@Html.EditorFor(m => m.Specifikacijos[i].Feature, new { @class = "form-control"})
						@Html.ValidationMessageFor(m => m.Specifikacijos[i].Feature, "", new { @class = "text-danger" })
					</td>
						
					<td>
						@Html.LabelFor(m => m.Specifikacijos[i].Value, new { @class = "control-label" })
						@Html.EditorFor(m => m.Specifikacijos[i].Value, new { @class = "form-control"})
						@Html.ValidationMessageFor(m => m.Specifikacijos[i].Value, "", new { @class = "text-danger" })
					</td>
						
					<td>
						<button
							name="remove"
							value="@Model.Specifikacijos[i].Id"
							formnovalidate @*ASP.NET Core magic attribute to prevent client side validation when submit button is clicked*@
							formaction="@Url.Action()#listEnd"
							class="btn btn-danger"
							style="white-space: nowrap;"
						><i class="fa-solid fa-trash"></i> Šalinti </button>
					</td>
				</tr>
				}
			</tbody>
		</table>

	</fieldset>

	<div class="container-fluid d-flex d-row justify-content-end">
		<button name="save" value="1" class="btn btn-success"><i class="fa-solid fa-floppy-disk"></i> Išsaugoti</button>
	</div>
}
</div>



<div class="main-content-footer container-fluid d-flex d-row justify-content-between align-items-center">
	<span class="title"></span>
	<span class="actions">
		<a href="@Url.Action("Index")" class="link-primary"><i class="fa-solid fa-angles-left"></i> Atgal į sarašą</a>
	</span>
</div>