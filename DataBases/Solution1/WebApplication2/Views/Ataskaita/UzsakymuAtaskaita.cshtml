@model WebApplication2.Models.Ataskaita
@{
	ViewData["title"] = "Ataskaita";
}

<div class="main-content-header container-fluid">
	<span class="title">@ViewData["title"]</span>
</div>

<div class="container-fluid d-flex justify-content-center">
@using (Html.BeginForm())
{
		<fieldset class="border rounded shadow p-2">
		<div class="form-group container-fluid d-flex justify-content-left align-items-center m-0 p-0">
			<label>Sutartys nuo:&nbsp;</label>
			@Html.EditorFor(m => m.DateFrom, "{0:yyyy-MM-dd}", new { @class = "form-control datetime-picker" })
			<span style="width:3ch;"></span>
			<label>Sutartys iki:&nbsp;</label>
			@Html.EditorFor(m => m.DateTo, "{0:yyyy-MM-dd}", new { @class = "form-control datetime-picker" })
		</div>
		
		<br>
		
		<div class="form-group container-fluid d-flex justify-content-left align-items-center m-0 p-0">
			<label>Busena</label>
			@Html.DropDownListFor(m => m.Status, Model.Lists.Statuses, "---", new { @class = "form-control"})
		</div>
		
		<div class="form-group container-fluid d-flex justify-content-left align-items-center m-0 p-0">
			<label>Kaina nuo:&nbsp;</label>
			@Html.EditorFor(m => m.SumFrom, new { @class = "form-control" })
			<span style="width:3ch;"></span>
			<label>Kaina iki:&nbsp;</label>
			@Html.EditorFor(m => m.SumTo, new { @class = "form-control" })
		</div>
		<button name="filter" class="btn btn-success" style="white-space: nowrap;"><i class="fa-solid fa-filter"></i>Atrinkti</button>
	</fieldset>

	<table class="table table-striped table-hover w-100">
		<thead>
			<tr style="background-color: lightblue">
				<th>@Html.DisplayNameFor(m => m.Orders[0].Number)</th>
				<th>@Html.DisplayNameFor(m => m.Orders[0].Date)</th>
				<th>@Html.DisplayNameFor(m => m.Orders[0].Status)</th>
				<th>Darbuotojas</th>
				<th>Pirkėjas</th>
				<th>Suma</th>
			</tr>
		</thead>
		<tbody>
			@if( Model.OrdersTuple.Count == 0 )
			{
			<tr>
				<td colspan="4" align="center"><b style="color:red;">Nurodytame laikotarpyje nebuvo užsakytų paslaugų</b></td>
			</tr>
			}

				@for (int i = 0; i < Model.Workers.Count; i++)
				{
					decimal tempSum = 0;
					int tempCount = 0;
					@for (int i2 = 0; i2 < Model.OrdersTuple.Count; i2++)
					{
						@if(Model.OrdersTuple[i2].Item4 == Model.Workers[i])
						{
							<tr>
								<td>@Model.OrdersTuple[i2].Item1</td>
								<td>@Model.OrdersTuple[i2].Item2.ToString("yyyy-MM-dd")</td>
								<td>@Model.OrdersTuple[i2].Item3</td>
								<td>@Model.OrdersTuple[i2].Item4</td>
								<td>@Model.OrdersTuple[i2].Item5</td>
								<td>@Model.OrdersTuple[i2].Item6</td>
							</tr>
							tempSum = @Model.OrdersTuple[i2].Item7;
							tempCount = @Model.OrdersTuple[i2].Rest.Item1;
						}
					}
					@@Model.OrdersCount += tempCount;
					@@Model.Sum += tempSum;

					<tr style="background-color: khaki">
						<td colspan="4"></td>
						<td>Kiekis</td>
						<td>Bendra suma</td>
					</tr>
					<tr style="background-color:khaki">
						<td colspan="4"></td>
						<td>@tempCount</td>
						<td>@tempSum</td>
					</tr>
				}

			

			<tr style="background-color: lightblue">
				<td height="10px;" colspan="6" align="center"><b>Papildoma</b></td>
			</tr>

			<tr>
				<td colspan="4"></td>
				<td>Užsakymų skaičius</td>
				<td>Bendra suma</td>
				
			</tr>

			<tr>
				<td colspan="4"></td>
				<td>
					@Html.DisplayFor(m => Model.OrdersCount)
				</td>
				<td>
					@Html.DisplayFor(m => Model.Sum)
				</td>
			</tr>
		</tbody>
	</table>

}
</div>

